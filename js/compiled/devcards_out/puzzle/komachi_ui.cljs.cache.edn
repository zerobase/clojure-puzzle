;; Analyzed by ClojureScript 1.7.170
{:use-macros {are cljs.test, testing cljs.test, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name puzzle.komachi-ui, :imports nil, :requires {komachi puzzle.komachi, puzzle.komachi puzzle.komachi, sab sablono.core, sablono.core sablono.core, t cljs.test, cljs.test cljs.test}, :uses nil, :defs {prime-numbers-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 30, :column 10, :end-line 30, :end-column 28}, :name puzzle.komachi-ui/prime-numbers-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, three-digit-primes-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 35, :column 10, :end-line 35, :end-column 33}, :name puzzle.komachi-ui/three-digit-primes-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, digits-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 40, :column 10, :end-line 40, :end-column 21}, :name puzzle.komachi-ui/digits-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, komachi?-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 44, :column 10, :end-line 44, :end-column 23}, :name puzzle.komachi-ui/komachi?-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, komachi-panel-row {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 55, :column 7, :end-line 55, :end-column 24, :arglists (quote ([num & [opts]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(num [opts])], :arglists ([num & [opts]]), :arglists-meta (nil)}}, :name puzzle.komachi-ui/komachi-panel-row, :variadic true, :file "src/puzzle/komachi-ui.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(num [opts])], :arglists ([num & [opts]]), :arglists-meta (nil)}, :method-params [(num [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists ([num & [opts]])}, komachi-panel {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 63, :column 7, :end-line 63, :end-column 20, :arglists (quote ([nums]))}, :name puzzle.komachi-ui/komachi-panel, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 20, :method-params ([nums]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([nums]))}, update-state! {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 76, :column 7, :end-line 76, :end-column 20, :arglists (quote ([state key f])), :doc "Update Atom state"}, :name puzzle.komachi-ui/update-state!, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 20, :method-params ([state key f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state key f])), :doc "Update Atom state"}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core, t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:path first komachi?-test last = take puzzle.komachi-ui :solutions :testing-contexts komachi/digits komachi/komachi? :func :ns :name :file :end-column komachi/three-digit-primes :type :puzzle.komachi_ui puzzle.komachi-ui/digits-test :digits-test :documentation :column :card :main-obj :fail komachi/prime-numbers :line not :initial-data :class :three-digit-primes-test :plus :expected digits-test :end-line puzzle.komachi-ui/three-digit-primes-test :prime-numbers-test :error :options puzzle.komachi-ui/komachi?-test :pass quote :arglists :komachi?-test puzzle.komachi-ui/prime-numbers-test :actual :doc three-digit-primes-test :test prime-numbers-test :message :heading :span}, :order [:path :func :puzzle.komachi_ui :card :name :documentation :main-obj :initial-data :options :heading :prime-numbers-test :testing-contexts :type :expected :actual :message :error = quote take komachi/prime-numbers :pass :fail not puzzle.komachi-ui/prime-numbers-test :ns :file :end-column :column :line :end-line :arglists :doc :test puzzle.komachi-ui prime-numbers-test :three-digit-primes-test first komachi/three-digit-primes last puzzle.komachi-ui/three-digit-primes-test three-digit-primes-test :digits-test komachi/digits puzzle.komachi-ui/digits-test digits-test :komachi?-test komachi/komachi? puzzle.komachi-ui/komachi?-test komachi?-test :plus :span :class :solutions]}, :doc nil}