;; Analyzed by ClojureScript 1.7.170
{:use-macros {are cljs.test, testing cljs.test, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name puzzle.komachi-ui, :imports nil, :requires {komachi puzzle.komachi, puzzle.komachi puzzle.komachi, sab sablono.core, sablono.core sablono.core, om om.core, om.core om.core, t cljs.test, cljs.test cljs.test}, :uses nil, :defs {komachi?-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 45, :column 10, :end-line 45, :end-column 23}, :name puzzle.komachi-ui/komachi?-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, komachi-solution-component {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 77, :column 7, :end-line 77, :end-column 33, :arglists (quote ([state]))}, :name puzzle.komachi-ui/komachi-solution-component, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 33, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, komachi-panel-row {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 56, :column 7, :end-line 56, :end-column 24, :arglists (quote ([num & [opts]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(num [opts])], :arglists ([num & [opts]]), :arglists-meta (nil)}}, :name puzzle.komachi-ui/komachi-panel-row, :variadic true, :file "src/puzzle/komachi-ui.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(num [opts])], :arglists ([num & [opts]]), :arglists-meta (nil)}, :method-params [(num [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists ([num & [opts]])}, t_puzzle$komachi_ui42103 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name puzzle.komachi-ui/t_puzzle$komachi_ui42103, :file "src/puzzle/komachi-ui.cljs", :type true, :anonymous true, :column 3, :line 78, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, komachi-panel {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 64, :column 7, :end-line 64, :end-column 20, :arglists (quote ([nums]))}, :name puzzle.komachi-ui/komachi-panel, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 20, :method-params ([nums]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([nums]))}, t_puzzle$komachi_ui42106 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name puzzle.komachi-ui/t_puzzle$komachi_ui42106, :file "src/puzzle/komachi-ui.cljs", :type true, :anonymous true, :column 3, :line 78, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, digits-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 41, :column 10, :end-line 41, :end-column 21}, :name puzzle.komachi-ui/digits-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_puzzle$komachi_ui42106 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([komachi-solution-component state meta42107])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name puzzle.komachi-ui/->t_puzzle$komachi_ui42106, :variadic false, :file "src/puzzle/komachi-ui.cljs", :method-params ([komachi-solution-component state meta42107]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 78, :max-fixed-arity 3, :fn-var true, :arglists (quote ([komachi-solution-component state meta42107])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, three-digit-primes-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 36, :column 10, :end-line 36, :end-column 33}, :name puzzle.komachi-ui/three-digit-primes-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_puzzle$komachi_ui42103 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([komachi-solution-component state meta42104])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name puzzle.komachi-ui/->t_puzzle$komachi_ui42103, :variadic false, :file "src/puzzle/komachi-ui.cljs", :method-params ([komachi-solution-component state meta42104]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 78, :max-fixed-arity 3, :fn-var true, :arglists (quote ([komachi-solution-component state meta42104])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, prime-numbers-test {:protocol-inline nil, :meta {:file "/Users/HidetoIshibashi/dev/clojure-puzzle/src/puzzle/komachi-ui.cljs", :line 31, :column 10, :end-line 31, :end-column 28}, :name puzzle.komachi-ui/prime-numbers-test, :variadic false, :file "src/puzzle/komachi-ui.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core, om om.core, om.core om.core, t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{first meta42107 komachi?-test last = take puzzle.komachi-ui :solutions :testing-contexts komachi-solution-component komachi/digits komachi/komachi? :ns :name :file :end-column komachi/three-digit-primes :type puzzle.komachi-ui/digits-test :column :fail komachi/prime-numbers :line not :class state :plus :expected digits-test :end-line puzzle.komachi-ui/three-digit-primes-test :error puzzle.komachi-ui/komachi?-test :pass quote :arglists puzzle.komachi-ui/prime-numbers-test :actual :doc three-digit-primes-test meta42104 :test prime-numbers-test :message :span}, :order [:testing-contexts :type :expected :actual :message :error = quote take komachi/prime-numbers :pass :fail not puzzle.komachi-ui/prime-numbers-test :ns :name :file :end-column :column :line :end-line :arglists :doc :test puzzle.komachi-ui prime-numbers-test first komachi/three-digit-primes last puzzle.komachi-ui/three-digit-primes-test three-digit-primes-test komachi/digits puzzle.komachi-ui/digits-test digits-test komachi/komachi? puzzle.komachi-ui/komachi?-test komachi?-test :plus :span :class :solutions komachi-solution-component state meta42104 meta42107]}, :doc nil}